{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "defaultValue": "jhffj",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "eastus",
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "francecentral",
        "francesouth",
        "uaecentral",
        "uaenorth",
        "southafricanorth",
        "southafricawest",
        "switzerlandnorth",
        "switzerlandwest",
        "germanynorth",
        "germanywestcentral",
        "norwayeast",
        "brazilsoutheast"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "integrationServiceEnvironment": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Integration Service Environment"
      }
    },
    "integrationAccount": {
      "type": "string",
      "defaultValue": "rg-apiplatform-nonprd/ia-iseapiplatform-nonprd",
      "metadata": {
        "description": "Integration Account"
      }
    },
    "servicebusNamespace": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logAnalyticsWS": {
      "type": "string",
      "defaultValue": "rg-logging-nonprd-eus/law-shared-nonprd",
      "metadata": {
        "description": "Log Analytics Workspace"
      }
    },
    "nestedLogicApp": {
      "type": "string",
      "defaultValue": "rg-integration-systemapp-dev/lapp-core-bloboperation",
      "metadata": {
        "description": "Integration Service Environment"
      }
    },
    "functionApp": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Integration Service Environment"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "metadata": {
        "description": "environment"
      }
    }
  },
  "variables": {
    "varISEParams": "[split(parameters('integrationServiceEnvironment'),'/')]",
    "varISEId": "[resourceId(variables('varISEParams')[0] ,'Microsoft.Logic/integrationServiceEnvironments', variables('varISEParams')[1])]",
    "varIAParams": "[split(parameters('integrationAccount'),'/')]",
    "varIAId": "[resourceId(variables('varIAParams')[0] ,'Microsoft.Logic/integrationAccounts', variables('varIAParams')[1])]",
    "varSbParams": "[split(parameters('servicebusNamespace'),'/')]",
    "varAuthRuleResourceId": "[resourceId(variables('varSbParams')[0],'Microsoft.ServiceBus/namespaces/authorizationRules', variables('varSbParams')[1], 'RootManageSharedAccessKey')]",
    "vardiagnosticSettingName": "[concat('diags-',  parameters('logicAppName'))]",
    "varWSParams": "[split(parameters('logAnalyticsWS'),'/')]",
    "varworkspaceId": "[resourceId(variables('varWSParams')[0],'Microsoft.OperationalInsights/workspaces/', variables('varWSParams')[1])]",
    "varsbConnectionName": "[concat('conn-', 'sb-', variables('varSbParams')[1])]",
    "varNestedLogicAppParamsBlob": "[split(parameters('nestedLogicApp'),'/')]",
    "varNestedLogicAppResIdBlob": "[resourceId(variables('varNestedLogicAppParamsBlob')[0] ,'Microsoft.Logic/workflows', variables('varNestedLogicAppParamsBlob')[1])]",
    "varFunctionParams": "[split(parameters('functionApp'),'/')]",
    "varFuncResIdErrorParser": "[resourceId(variables('varFunctionParams')[0] ,'Microsoft.Web/sites/functions', variables('varFunctionParams')[1], 'ErrorParser')]"
  },
  "resources": [
    {
      "name": "[parameters('logicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('logicAppLocation')]",
      "tags": {
        "Company": "lyb",
        "Domain": "integration",
        "FunctionalArea": "",
        "SubFunction": "",
        "Connector": "",
        "Cloud provider": "az",
        "Region": "eus"
      },
      "apiVersion": "2016-06-01",
      "resources": [
        {
          "type": "providers/diagnosticSettings",
          "name": "[concat('Microsoft.Insights/', variables('vardiagnosticSettingName'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Logic/workflows', parameters('logicAppName'))]"
          ],
          "apiVersion": "2017-05-01-preview",
          "properties": {
            "name": "[variables('vardiagnosticSettingName')]",
            "storageAccountId": null,
            "workspaceId": "[variables('varworkspaceId')]",
            "logs": [
              {
                "category": "WorkflowRuntime",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              }
            ],
            "metrics": [
              {
                "timeGrain": "PT1M",
                "enabled": false,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ]
          }
        }
      ],
      "properties": {
        "state": "Disabled",
        "integrationServiceEnvironment": {
          "id": "[variables('varISEId')]"
        },
        "integrationAccount": {
          "id": "[variables('varIAId')]"
        },
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Initialize_TrackingId_variable": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "var_trackingId",
                    "type": "string",
                    "value": "@{guid()}"
                  }
                ]
              },
              "runAfter": {
              }
            },
            "Initialize_Track_Object_Variable": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "var_trackObject",
                    "type": "object",
                    "value": {
                      "BusinessDocID": "@replace(triggerBody()?['Name'],concat('.',last(split(triggerBody()?['Name'],'.'))),'')",
                      "Direction": "Outbound",
                      "FunctionalGroup": "Manufacturing",
                      "LyoCompanyCode": "",
                      "MessageType": "Binary",
                      "SourceFileName": "@triggerBody()?['Name']",
                      "SourceFilePath": "@triggerBody()?['Path']",
                      "SvcName": "",
                      "SvcNameType": "Interface",
                      "SvcStatus": "Open",
                      "SvcStart": "@utcNow('yyyy-MM-ddTHH:mm:ss')",
                      "TechnicalDocID": "@triggerBody()?['Name']",
                      "TradingPartnerID": "Toups",
                      "LastUpdatedBy": "BizTalk",
                      "LastUpdatedDate": "@utcNow('yyyy-MM-ddTHH:mm:ss')"
                    }
                  }
                ]
              },
              "runAfter": {
                "Initialize_TrackingId_variable": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_variable_ErrorMessage": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "var_ErrorMessage",
                    "type": "string"
                  }
                ]
              },
              "runAfter": {
                "Initialize_Track_Object_Variable": [
                  "Succeeded"
                ]
              }
            },
            "Scope_Main": {
              "type": "Scope",
              "actions": {

              },
              "runAfter": {
                "Initialize_variable_ErrorMessage": [
                  "Succeeded"
                ]
              }
            },
            "Handle_Exception": {
              "type": "Scope",
              "actions": {
                "Filter_Handle_Exception": {
                  "type": "Query",
                  "inputs": {
                    "from": "@result('Scope_Main')",
                    "where": "@equals(item()['status'], 'Failed')"
                  },
                  "runAfter": {
                  }
                },
                "For_each_Handle_Exception": {
                  "type": "Foreach",
                  "foreach": "@body('Filter_Handle_Exception')",
                  "actions": {
                    "ErrorParser_Handle_Exception": {
                      "type": "Function",
                      "inputs": {
                        "body": "@items('For_each_Handle_Exception')",
                        "function": {
                          "id": "[variables('varFuncResIdErrorParser')]"
                        }
                      },
                      "runAfter": {
                      }
                    },
                    "Send__Handle_Exception_Message_To_Audit_Queue": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['servicebus']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": {
                          "ContentData": "@{base64(concat('{','\n','    \"trackType\": \"ERROR\",','\n','    \"runId\": \"',workflow()['run']['name'],'\",','\n','    \"error\": {','\n','        \"code\": \"',body('ErrorParser_Handle_Exception')?['code'],'\",','\n','        \"message\": \"',body('ErrorParser_Handle_Exception')?['message'],'\"','\n','    }','\n','}'))}",
                          "ContentType": "application/json"
                        },
                        "path": "/@{encodeURIComponent(encodeURIComponent('sbq-snd-audit-all'))}/messages",
                        "queries": {
                          "systemProperties": "Run Details"
                        }
                      },
                      "runAfter": {
                        "ErrorParser_Handle_Exception": [
                          "Succeeded"
                        ]
                      }
                    }
                  },
                  "runAfter": {
                    "Filter_Handle_Exception": [
                      "Succeeded"
                    ]
                  }
                }
              },
              "runAfter": {
                "Switch_On_Flag_Completed": [
                  "Failed"
                ]
              }
            },
            "Send_Audit_Message_To_Queue": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['servicebus']['connectionId']"
                  }
                },
                "method": "post",
                "body": [
                  {
                    "ContentData": "@{base64(concat('{','\n','\"trackType\":\"RUN\",','\n','\"run\":{','\n','\"runid\":',workflow()['run']['name'],',','\n','\"name\":',workflow()['name'],',','\n','\"correlationId\":',string(variables('var_trackingId')),'\n','}','\n','}'))}",
                    "ContentType": "application/json"
                  },
                  {
                    "ContentData": "@{base64(concat('{','\n','\"trackType\":\"PROPERTY\",','\n','\"runid\":\"',workflow()['run']['name'],'\",','\n','\"properties\":',variables('var_trackObject'),'\n','}'))}",
                    "ContentType": "application/json"
                  }
                ],
                "path": "/@{encodeURIComponent(encodeURIComponent('sbq-snd-audit-all'))}/messages/batch",
                "queries": {
                  "systemProperties": "Run Details"
                }
              },
              "runAfter": {
                "Initialize_variable_ErrorMessage": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {
              },
              "type": "Object"
            }
          },
          "triggers": {
          },
          "contentVersion": "1.0.0.0",
          "outputs": {
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "servicebus": {
                "id": "[concat(variables('varISEId'), '/managedApis/servicebus')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('varsbConnectionName'))]",
                "connectionName": "[variables('varsbConnectionName')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('varsbConnectionName'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[variables('varsbConnectionName')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(variables('varISEId'), '/managedApis/servicebus')]"
        },
        "displayName": "[variables('varsbConnectionName')]",
        "parameterValues": {
          "connectionString": "[listkeys(variables('varAuthRuleResourceId'), '2017-04-01').primaryConnectionString]"
        }
      }
    }
  ],
  "outputs": {
  }
}